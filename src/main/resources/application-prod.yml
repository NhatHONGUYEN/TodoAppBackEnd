spring:
  application:
    name: todo-app
  datasource:
    url: jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
    username: ${PGUSER}
    password: ${PGPASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:https://todoappkeycloak-production.up.railway.app/realms/todo-backend}
  web:
    cors:
      allowed-origins:
        - "https://todoappnhat.netlify.app"
      allowed-methods:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
        - OPTIONS
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600

# Configuration Swagger pour production
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    oauth:
      client-id: todo-backend-client
      client-secret: 5uUeP1tBRYLxGH1BSgsSdJ0WfUGNBWgN
      realm: todo-backend
      app-name: ToDo API
      scopes:
        - openid
        - profile
        - email

# Configuration Keycloak
auth:
  keycloak:
    client-id: ${KEYCLOAK_CLIENT_ID:todo-backend-client}
    client-secret: 5uUeP1tBRYLxGH1BSgsSdJ0WfUGNBWgN
    realm: ${KEYCLOAK_REALM:todo-backend}
    server-url: ${KEYCLOAK_SERVER_URL:https://todoappkeycloak-production.up.railway.app}

# Configuration serveur
server:
  port: ${PORT:8080}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false

# Configuration des logs
logging:
  level:
    com.example.ToDoApp: INFO
    org.springframework.security: INFO
    org.springframework.web: INFO
