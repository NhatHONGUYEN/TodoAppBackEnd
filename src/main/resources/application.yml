# =============================================================================
# Configuration commune à tous les profils
# =============================================================================
spring:
  application:
    name: todo-app

  profiles:
    # profil actif par défaut = dev, modifiable via la variable ACTIVE_PROFILE
    active: ${ACTIVE_PROFILE}

---
# =============================================================================
# Profil DEV : base H2 + Keycloak local + CORS + Swagger UI
# =============================================================================
spring:
  config:
    activate:
      on-profile: dev

  # --- Base de données en mémoire H2 ---
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true

  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

  # --- Resource Server JWT via Keycloak local (port 81) ---
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI}

  # --- CORS pour ton front Angular (4200) ) ---
  web:
    cors:
      allowed-origins:
        - ${FRONTEND_URL}

      allowed-methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600

# --- Swagger UI + OAuth2 pour tester tes endpoints en dev ---
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true

  swagger-ui:
    path: /swagger-ui.html
    # Le redirect URL de Swagger doit pointer sur ton backend (port 80)
    oauth2-redirect-url: ${KEYCLOAK_REDIRECT_URI}
    oauth:
      client-id: ${KEYCLOAK_CLIENT_ID}
      client-secret: ${KEYCLOAK_CLIENT_SECRET}
      realm: ${KEYCLOAK_REALM}
      app-name: ToDo API
      scopes: ["openid", "profile", "email"]

# --- Configuration de Keycloak pour Spring (local sur port 81) ---
auth:
  keycloak:
    client-id: ${KEYCLOAK_CLIENT_ID}
    client-secret: ${KEYCLOAK_CLIENT_SECRET}
    realm: ${KEYCLOAK_REALM}
    server-url: ${KEYCLOAK_SERVER_URL}

# --- Serveur Spring Boot écoute sur le port 80 ---
server:
  port: ${PORT}
  servlet:
    context-path: /

  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# --- Logs en DEBUG pour Spring Security, CORS, Springdoc, ta couche métier ---
logging:
  level:
    com.example.ToDoApp: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.cors: DEBUG
    org.springdoc: DEBUG
